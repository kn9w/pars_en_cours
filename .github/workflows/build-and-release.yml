name: Release APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup repo
      uses: actions/checkout@v4
      
    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Setup Expo and EAS
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup environment variables
      run: |
        echo "EXPO_PUBLIC_MAPBOX_PUBLIC_TOKEN=${{ secrets.MAPBOX_PUBLIC_TOKEN }}" >> .env
        echo "MAPBOX_DOWNLOAD_TOKEN=${{ secrets.MAPBOX_DOWNLOAD_TOKEN }}" >> .env
        echo "EXPO_PUBLIC_EAS_PROJECT_ID=${{ secrets.EAS_PROJECT_ID }}" >> .env
        echo "EXPO_PUBLIC_ENABLE_MAPBOX=true" >> .env
        
    - name: Extract version from app.json
      id: version
      run: |
        VERSION=$(node -p "require('./app.json').expo.version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
        
    - name: Build Android APK
      run: eas build --platform android --profile production --local --output ${{ github.workspace }}/pars-en-cours-v${{ steps.version.outputs.version }}.apk
      env:
        EXPO_PUBLIC_MAPBOX_PUBLIC_TOKEN: ${{ secrets.MAPBOX_PUBLIC_TOKEN }}
        MAPBOX_DOWNLOAD_TOKEN: ${{ secrets.MAPBOX_DOWNLOAD_TOKEN }}
        EXPO_PUBLIC_EAS_PROJECT_ID: ${{ secrets.EAS_PROJECT_ID }}
        EXPO_PUBLIC_ENABLE_MAPBOX: true
        
    - name: Generate checksums
      run: |
        cd ${{ github.workspace }}
        sha256sum pars-en-cours-v${{ steps.version.outputs.version }}.apk > pars-en-cours-v${{ steps.version.outputs.version }}.apk.sha256
        md5sum pars-en-cours-v${{ steps.version.outputs.version }}.apk > pars-en-cours-v${{ steps.version.outputs.version }}.apk.md5
        
    - name: Create build info
      run: |
        cat > build-info.json << EOF
        {
          "version": "${{ steps.version.outputs.version }}",
          "git_tag": "${{ github.ref_name }}",
          "commit": "${{ github.sha }}",
          "build_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "build_environment": "GitHub Actions",
          "node_version": "$(node --version)",
          "npm_version": "$(npm --version)",
          "expo_version": "$(npx expo --version)"
        }
        EOF
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          pars-en-cours-v${{ steps.version.outputs.version }}.apk
          pars-en-cours-v${{ steps.version.outputs.version }}.apk.sha256
          pars-en-cours-v${{ steps.version.outputs.version }}.apk.md5
          build-info.json
        body: |
          ## Release ${{ github.ref_name }} (v${{ steps.version.outputs.version }})
          
          ### 📱 APK Download
          - **APK File**: `pars-en-cours-v${{ steps.version.outputs.version }}.apk`
          - **SHA256**: See `pars-en-cours-v${{ steps.version.outputs.version }}.apk.sha256`
          - **MD5**: See `pars-en-cours-v${{ steps.version.outputs.version }}.apk.md5`
          
          ### 🔐 Verification
          
          **Verify the APK integrity:**
          ```bash
          # Download the APK and checksum files
          sha256sum -c pars-en-cours-v${{ steps.version.outputs.version }}.apk.sha256
          ```
          
          **Verify the build matches the source code:**
          1. Clone this repository at commit `${{ github.sha }}`
          2. Follow the build instructions in README.md
          3. Compare the generated APK with this release
          
          **Build Information:**
          - **Commit**: `${{ github.sha }}`
          - **Build Date**: `$(date -u +%Y-%m-%dT%H:%M:%SZ)`
          - **Built with**: GitHub Actions (Ubuntu Latest)
          
          ### 📋 Changes
          See the [CHANGELOG.md](CHANGELOG.md) for detailed changes in this release.
          
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
