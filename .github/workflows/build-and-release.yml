name: Build and Release APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup EAS CLI
      run: npm install -g @expo/eas-cli
      
    - name: Install dependencies
      run: npm ci
      
    - name: Setup environment variables
      run: |
        echo "EXPO_PUBLIC_MAPBOX_PUBLIC_TOKEN=${{ secrets.MAPBOX_PUBLIC_TOKEN }}" >> .env
        echo "MAPBOX_DOWNLOAD_TOKEN=${{ secrets.MAPBOX_DOWNLOAD_TOKEN }}" >> .env
        echo "EXPO_PUBLIC_EAS_PROJECT_ID=${{ secrets.EAS_PROJECT_ID }}" >> .env
        echo "EXPO_PUBLIC_ENABLE_MAPBOX=true" >> .env
        
    - name: Authenticate with EAS
      run: eas login --non-interactive
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        
    - name: Build APK
      run: eas build --platform android --profile production --non-interactive
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        
    - name: Download APK
      run: |
        # Get the build URL from EAS
        BUILD_URL=$(eas build:list --platform android --status finished --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
        wget -O pars-en-cours.apk "$BUILD_URL"
        
    - name: Generate checksums
      run: |
        sha256sum pars-en-cours.apk > pars-en-cours.apk.sha256
        md5sum pars-en-cours.apk > pars-en-cours.apk.md5
        
    - name: Sign checksums
      run: |
        # Sign the checksums with GPG (optional but recommended)
        if [ -n "${{ secrets.GPG_PRIVATE_KEY }}" ]; then
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          gpg --batch --yes --detach-sign --armor pars-en-cours.apk.sha256
        fi
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        
    - name: Create build info
      run: |
        cat > build-info.json << EOF
        {
          "version": "${{ github.ref_name }}",
          "commit": "${{ github.sha }}",
          "build_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "build_environment": "GitHub Actions",
          "node_version": "$(node --version)",
          "npm_version": "$(npm --version)",
          "expo_version": "$(npx expo --version)"
        }
        EOF
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          pars-en-cours.apk
          pars-en-cours.apk.sha256
          pars-en-cours.apk.md5
          pars-en-cours.apk.sha256.asc
          build-info.json
        body: |
          ## Release ${{ github.ref_name }}
          
          ### 📱 APK Download
          - **APK File**: `pars-en-cours.apk`
          - **SHA256**: See `pars-en-cours.apk.sha256`
          - **MD5**: See `pars-en-cours.apk.md5`
          
          ### 🔐 Verification
          
          **Verify the APK integrity:**
          ```bash
          # Download the APK and checksum files
          sha256sum -c pars-en-cours.apk.sha256
          ```
          
          **Verify the build matches the source code:**
          1. Clone this repository at commit `${{ github.sha }}`
          2. Follow the build instructions in README.md
          3. Compare the generated APK with this release
          
          **Build Information:**
          - **Commit**: `${{ github.sha }}`
          - **Build Date**: `$(date -u +%Y-%m-%dT%H:%M:%SZ)`
          - **Built with**: GitHub Actions (Ubuntu Latest)
          
          ### 📋 Changes
          See the [CHANGELOG.md](CHANGELOG.md) for detailed changes in this release.
          
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
